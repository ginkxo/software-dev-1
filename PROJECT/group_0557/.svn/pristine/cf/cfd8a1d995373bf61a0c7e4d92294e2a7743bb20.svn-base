package finalproject;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class Shopper {
	private ArrayList<Invoice> invoices;
	private HashMap<Product, Integer> cart;
	private String userName, password, address;
	private City city;
	private int UserID;

	/**
	 * Default constructor to build a Shopper object from scratch.
	 */
	public Shopper() {
		invoices = new ArrayList<Invoice>();
		cart = new HashMap<Product, Integer>();
	}

	/**
	 * Constructor to reconstruct a shopper object from the CSV database.
	 * @param userName
	 * @param password
	 * @param city -> City object representing the city the shopper lives in
	 * @param Address -> Street address of the shopper
	 * @param UserID
	 * @param cart
	 */
	public Shopper(String userName, String password, City city, String address, int UserID, HashMap<Product, Integer> cart) {
		this.userName = userName;
		this.password = password;
		this.city = city;
		this.address = address;
		this.cart = cart; //TODO Do we need to do an iterator for memory address purposes
		//TODO Iterate through cart to ensure that those items are still available
	}
	public void addToCart(Product product, int quantity){
		if (product.getQuantity() >= quantity) {
			if (cart.containsKey(product)){
				cart.replace(product, cart.get(product) + quantity);
			}
			else {
				cart.put(product, quantity);
			}
			product.setQuantity(product.getQuantity() - quantity);
		}
	}
	
	public void removeFromCart(Product product, int quantity){
		if (cart.containsKey(product)){ //do we have to check if product exists or is it a given?
			if (cart.get(product) <= quantity) cart.remove(product);
			else {cart.put(product, cart.get(product) - quantity);}
			product.setQuantity(product.getQuantity() + quantity);
		}
	}
	
	public void viewCart(){
		if (!cart.isEmpty()) {
			System.out.println("Your cart contains:");
			for(Map.Entry<Product, Integer> entry : cart.entrySet()) //http://stackoverflow.com/questions/9371667/foreach-loop-in-java-for-dictionary
			{
				System.out.println(entry.getKey().getName() + ": " + entry.getValue());
			}
			System.out.println("");
		} else {System.out.println("your cart is empty!");}
	}

	public boolean checkOut(){
		if (!cart.isEmpty()) {
		invoices.add(new Invoice(cart));
		cart.clear();
		return true;}
		return false;
	}
	
	public void viewInvoices(){
		for (Invoice i : invoices) System.out.println(i);
	}

}
